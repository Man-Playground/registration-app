pipeline{
    agent{ 
        label 'jenkins-agent'
    }
    tools{
        jdk 'java17'
        maven 'maven3'
    }
    environment{
        APP_NAME = 'man-app-pipeline'
        RELEASE = '1.0.0'
        DOCKER_USER = 'manjugraju'
        DOCKER_PASS = 'dockerhub'
        IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
        }
    stages{
        stage("clean workspace"){
            steps {
            cleanWs()
            }
        }
    
        stage("Checkout SCM"){
            steps {
            git branch: 'main', credentialsId: 'github' , url: 'https://github.com/manjugraju/registration-app.git'
            } 
        }

        stage("build app"){
            steps {
            sh 'mvn clean package'
            }
        }

        stage("Test application"){
            steps {
            sh 'mvn test'
            }

        }
        
        stage("Sonar cube scanning"){
            steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonar-jenkins'){
                    sh 'mvn sonar:sonar'
                    }    
                }
            }
        }
        stage("Quality gate"){
            steps{
                script{
                    //waitForQualityGate abortPipeline: false, credentialsId: 'sonar-jenkins'
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-jenkins'
                }
            }
        }
        stage("Build &  push docker image"){
            steps{
                script{
                    docker.withRegistry('',DOCKER_PASS){
                        docker_image = docker.build "${IMAGE_NAME}"
                    }
                    docker.withRegistry('',DOCKER_PASS){
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push('latest')
                        }
                }
            }
        }
    }         
}
